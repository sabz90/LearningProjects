<UserControl x:Class="CaliburnMicroApp.AppView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Grid Width="300" Height="300" Background="LightBlue">
        <!--The name (Count) is automatically binded to the Count property of the AppViewModel. Notice we don't specify the AppViewModel anywhere.
        This is the work done by the caliburn Micro Framework. How? It expects us to follow the naming convention properly. 
        -->

        <TextBlock Name="Count" Margin="20" FontSize="150" VerticalAlignment="Center" HorizontalAlignment="Center" />
        <!--
        <RepeatButton Name="IncrementCount" Content="Up" Margin="15" VerticalAlignment="Bottom" />
        -->

        <RepeatButton Content="Double" Margin="15" VerticalAlignment="Top"
              cal:Message.Attach="[Event Click] = [IncrementCount(3)]" />
    
        <!-- in the below code, IncrementCount is called when the Button is clicked. However the method accepts a parameter.
        Since we have not provided any parameter, Caliburn looks for any element with the parameter name of the method and 
        then it finds the slider "Delta" and uses it's value as the parameter to the IncrementCount Method-->
        <UniformGrid Columns="2" VerticalAlignment="Bottom">
            <Slider Name="Delta" Minimum="0" Maximum="5" Margin="15" />
            <Button Name="IncrementCount" Content="Increment" Margin="15" />
        </UniformGrid>
    </Grid>
</UserControl>